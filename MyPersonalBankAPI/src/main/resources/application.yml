spring:
  application.name: MyPersonalBackAPI
  profiles.active: dev
  #profiles.active: prod

---
# Acceso BB.DD. H2 dev --> http://localhost:9980/h2-bankAPI
spring:
  config.activate.on-profile: dev
  sql.init.mode: always
  datasource:
    url: "jdbc:h2:mem:personalapidb"
    driverClassName: org.h2.Driver
    username: sa
    #password: password     # Deshabilitada para pruebas
  jpa:
    show-sql: true
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
      #ddl-auto: update  # Para no tener que cargar manualmente la BB.DD. en cada ejecución NO FUNCIONA
      generate-ddl: true
    defer-datasource-initialization: true
  h2:
    console.enabled: true
    console.path: /h2-bankAPI

#debug: true
logging:
  #path: /var/tmp/
  #file: /var/tmp/mylog.log
  level:
    #root: WARN
    root: INFO

server.port: 9980

---
# Acceso BB.DD. MySQL prod--> http://localhost:9990
#  spring.datasource.url=jdbc:mysql://localhost/personalapidb
spring:
  config.activate.on-profile: prod
  sql.init.mode: always
  datasource:
    url: "jdbc:mysql://127.0.0.1:3306/personalapidb"
    driverClassName: com.mysql.cj.jdbc.Driver
    username: apidb_user
    password: api123
  jpa:
    show-sql: true
    database-platform: org.hibernate.dialect.MySQL5Dialect
    hibernate:
      # No utilizar 'create-drop' en producción. Eliminará su base de datos después de que se detenga la aplicación.
      ddl-auto: update
      generate-ddl: true
    defer-datasource-initialization: true

server:
  # Configurar HTTPS
  port: 9443
  ssl:
    key-store: keystore.p12
    key-store-password: pa55wrd
    keyStoreType: PKCS12
    keyAlias: tomcat

security.require-ssl: true